CREATE TABLE ORGANIZATION
(
    ID          BIGSERIAL        NOT NULL PRIMARY KEY,
    NAME        VARCHAR(255)     NOT NULL,
    DESCRIPTION VARCHAR(255)     NOT NULL,
    LOGO        varchar(512)     NOT NULL,
    VERSION     BIGINT DEFAULT 0 NOT NULL,
    UNIQUE (NAME)

);


CREATE TABLE PRODUCT
(
    ID                       BIGSERIAL                                       NOT NULL PRIMARY KEY,
    TITLE                    VARCHAR(255)                                    NOT NULL,
    DESCRIPTION              VARCHAR(255)                                    NOT NULL,
    ORGANIZATION_ID          BIGINT                                          NOT NULL,
    COST                     DECIMAL(10, 2)                                  NOT NULL,
    AMOUNT                   BIGINT                                          NOT NULL,
    DISCOUNT_ID              BIGINT                                          NOT NULL,
    REVIEWS                  VARCHAR(255)                                    NOT NULL,
    KEYWORDS                 VARCHAR(255)                                    NOT NULL,
    TABLE_OF_CHARACTERISTICS VARCHAR(255)                                    NOT NULL,
    RATING                   BIGINT                                          NOT NULL,
    VERSION                  BIGINT      DEFAULT 0                           NOT NULL,
    STATUS                   VARCHAR(30) DEFAULT 'ACTIVE'::CHARACTER VARYING NOT NULL,
    UNIQUE (TITLE)
);

CREATE TABLE CART
(
    ID             BIGSERIAL      NOT NULL PRIMARY KEY,
    USER_ID        BIGSERIAL      NOT NULL,
    PRODUCT_ID     BIGINT         NOT NULL,
    order_item_id  BIGINT         NOT NULL,
    total_price    DECIMAL(10, 2) NOT NULL,
    total_quantity BIGINT         NOT NULL
);

CREATE TABLE CART_PRODUCT
(
    CART_ID    BIGINT NOT NULL,
    PRODUCT_ID BIGINT NOT NULL,

    PRIMARY KEY (CART_ID, PRODUCT_ID),

    CONSTRAINT fk_cart_product_cart
        FOREIGN KEY (CART_ID)
            REFERENCES CART (ID),


    CONSTRAINT fk_cart_product_product
        FOREIGN KEY (PRODUCT_ID)
            REFERENCES PRODUCT (ID)
);

CREATE TABLE ORGANIZATION_PRODUCT
(
    ORGANIZATION_ID BIGINT NOT NULL,
    PRODUCT_ID      BIGINT NOT NULL,

    PRIMARY KEY (ORGANIZATION_ID, PRODUCT_ID),

    CONSTRAINT fk_organization_product_organization
        FOREIGN KEY (ORGANIZATION_ID)
            REFERENCES CART (ID),


    CONSTRAINT fk_organization_product_product
        FOREIGN KEY (PRODUCT_ID)
            REFERENCES PRODUCT (ID)
);

CREATE TABLE DISCOUNT
(
    ID       BIGSERIAL NOT NULL PRIMARY KEY,
    AMOUNT   BIGINT    NOT NULL,
    DURATION BIGINT    NOT NULL,
    UNIQUE (AMOUNT)
);

CREATE TABLE NOTIFICATIONS
(
    ID    BIGSERIAL    NOT NULL PRIMARY KEY,
    TITLE VARCHAR(255) NOT NULL,
    DATE  DATE         NOT NULL,
    TEXT  VARCHAR(255) NOT NULL,
    UNIQUE (TITLE)
);

create table authority
(
    id         bigint generated by default as identity
        constraint "AUTHORITY_pkey"
            primary key,
    permission varchar(255) not null
        unique
);

create table account_role
(
    id   bigint generated by default as identity
        primary key,
    name varchar(255) not null
        unique
);

create table review
(
    id         bigint generated by default as identity
        primary key,
    user_id    bigint       not null
        constraint "FK_review_USERS"
            references users,
    product_id bigint       not null,
    comment    varchar(512) not null,
    approved   boolean      not null
);

create table users
(
    id                      bigint generated by default as identity
        constraint "USERS_pkey"
            primary key,
    username                varchar(255)      not null
        unique,
    password                varchar(255)      not null,
    email                   varchar(100)      not null,
    balance                 varchar(30)       not null,
    status                  varchar(30)       not null,
    version                 integer default 0 not null,
    account_non_expired     boolean           not null,
    account_non_locked      boolean           not null,
    credentials_non_expired boolean           not null,
    enabled                 boolean           not null,
    UNIQUE (email)
);

alter table users
    add column account_non_expired     boolean        not null,
    add column account_non_locked      boolean        not null,
    add column credentials_non_expired boolean        not null,
    add column enabled                 boolean        not null,
    add column balance                 DECIMAL(10, 2) NOT NULL;


create table order_item
(
    id          bigint generated by default as identity
        constraint "ORDER_ITEM_pkey"
            primary key,
    quantity    integer       not null,
    item_price  numeric(8, 2) not null,
    total_price numeric(8, 2) not null,
    product_id  bigint        not null
        constraint fk_order_item_product
            references product,
    order_id    bigint
        unique
        constraint fk_order_item_shop_order
            references shop_order
);

create table shop_order
(
    id                 bigint generated by default as identity
        constraint "SHOP_ORDER_pkey"
            primary key,
    recipient_username varchar(255)      not null,
    recipient_lastname varchar(255)      not null,
    recipient_mail     varchar(255)      not null,
    status             varchar(30)       not null,
    user_id            bigint            not null
        constraint fk_shop_order_account_user
            references users,
    price              decimal(10, 2)    not null,
    version            integer default 0 not null
);

create table product_image
(
    id         bigint generated by default as identity
        primary key,
    path       varchar(512) not null,
    product_id bigint
        constraint fk_product_image_product
            references product
);

create table logo
(
    id              bigint generated by default as identity
        primary key,
    logo            varchar(512) not null,
    organization_id bigint
        constraint fk_logo_organization
            references organization
);

create table role_authority
(
    role_id      bigint not null
        constraint fk_role_authority_account_role
            references account_role,
    authority_id bigint not null
        constraint fk_role_authority_authority
            references authority,
    primary key (role_id, authority_id)
);

create table user_role
(
    user_id bigint not null
        constraint fk_user_role_account_user
            references users,
    role_id bigint not null
        constraint fk_user_role_account_role
            references account_role,
    primary key (user_id, role_id)
);